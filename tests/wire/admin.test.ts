/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { PhonicClient } from "../../src/Client";

describe("Admin", () => {
    test("create_voice", async () => {
        const server = mockServerPool.createServer();
        const client = new PhonicClient({
            token: "test",
            twilioAccountSid: "test",
            environment: { base: server.baseUrl, production: server.baseUrl },
        });

        server.mockEndpoint().post("/admin/voices").respondWith().statusCode(200).build();

        const response = await client.admin.createVoice();
        expect(response).toEqual(undefined);
    });

    test("create_latent", async () => {
        const server = mockServerPool.createServer();
        const client = new PhonicClient({
            token: "test",
            twilioAccountSid: "test",
            environment: { base: server.baseUrl, production: server.baseUrl },
        });

        server.mockEndpoint().post("/admin/latents").respondWith().statusCode(200).build();

        const response = await client.admin.createLatent();
        expect(response).toEqual(undefined);
    });

    test("list_voice_latents", async () => {
        const server = mockServerPool.createServer();
        const client = new PhonicClient({
            token: "test",
            twilioAccountSid: "test",
            environment: { base: server.baseUrl, production: server.baseUrl },
        });

        server.mockEndpoint().get("/admin/voice-latents").respondWith().statusCode(200).build();

        const response = await client.admin.listVoiceLatents();
        expect(response).toEqual(undefined);
    });
});
