/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments.js";
import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { Agents } from "./api/resources/agents/client/Client.js";
import { Tools } from "./api/resources/tools/client/Client.js";
import { ExtractionSchemas } from "./api/resources/extractionSchemas/client/Client.js";
import { Voices } from "./api/resources/voices/client/Client.js";
import { Conversations } from "./api/resources/conversations/client/Client.js";
import { Projects } from "./api/resources/projects/client/Client.js";
import { Sts } from "./api/resources/sts/client/Client.js";

export declare namespace PhonicClient {
    export interface Options {
        environment?: core.Supplier<environments.PhonicEnvironment | environments.PhonicEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional query string parameters to include in the request. */
        queryParams?: Record<string, unknown>;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class PhonicClient {
    protected readonly _options: PhonicClient.Options;
    protected _agents: Agents | undefined;
    protected _tools: Tools | undefined;
    protected _extractionSchemas: ExtractionSchemas | undefined;
    protected _voices: Voices | undefined;
    protected _conversations: Conversations | undefined;
    protected _projects: Projects | undefined;
    protected _sts: Sts | undefined;

    constructor(_options: PhonicClient.Options) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "phonic",
                    "X-Fern-SDK-Version": "0.29.1",
                    "User-Agent": "phonic/0.29.1",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get agents(): Agents {
        return (this._agents ??= new Agents(this._options));
    }

    public get tools(): Tools {
        return (this._tools ??= new Tools(this._options));
    }

    public get extractionSchemas(): ExtractionSchemas {
        return (this._extractionSchemas ??= new ExtractionSchemas(this._options));
    }

    public get voices(): Voices {
        return (this._voices ??= new Voices(this._options));
    }

    public get conversations(): Conversations {
        return (this._conversations ??= new Conversations(this._options));
    }

    public get projects(): Projects {
        return (this._projects ??= new Projects(this._options));
    }

    public get sts(): Sts {
        return (this._sts ??= new Sts(this._options));
    }
}
