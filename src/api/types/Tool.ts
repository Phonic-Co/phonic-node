/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Phonic from "../index.js";

export interface Tool {
    /** The ID of the tool. */
    id: string;
    /** The name of the tool. */
    name: string;
    /** Description of what the tool does. */
    description: string;
    project: Tool.Project;
    /** The type of tool. */
    type: Tool.Type;
    /** Mode of operation - sync waits for response, async continues without waiting. */
    execution_mode: Tool.ExecutionMode;
    /** Array of parameter definitions for the tool. */
    parameters: Phonic.ToolParameter[];
    /** HTTP method for webhook tools. */
    endpoint_method?: "POST";
    /** URL for webhook tools. */
    endpoint_url?: string;
    /** Headers for webhook tools. */
    endpoint_headers?: Record<string, string>;
    /** Timeout in milliseconds for webhook tools. */
    endpoint_timeout_ms?: number;
    /** Timeout in milliseconds for WebSocket tool responses. */
    tool_call_output_timeout_ms?: number;
}

export namespace Tool {
    export interface Project {
        id: string;
        name: string;
    }

    /**
     * The type of tool.
     */
    export type Type = "custom_webhook" | "custom_websocket";
    export const Type = {
        CustomWebhook: "custom_webhook",
        CustomWebsocket: "custom_websocket",
    } as const;
    /**
     * Mode of operation - sync waits for response, async continues without waiting.
     */
    export type ExecutionMode = "sync" | "async";
    export const ExecutionMode = {
        Sync: "sync",
        Async: "async",
    } as const;
}
